services:
  initializer:
    container_name: db-initializer
    build:
      context: ./parser/
    environment:
      BEGIN_YEAR: 2014
      END_YEAR: 2024
      VOLUME_DIR: "/app/data"
    volumes:
      - ./parser/data:/app/data
  postgres_db:
    container_name: postgres-ztbd
    image: postgres:17.4
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: extensive_testing
    volumes:
      - ./postgres/db.sql:/docker-entrypoint-initdb.d/db.sql
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    depends_on:
      initializer:
        condition: service_completed_successfully
  mysql:
    image: mysql:9.2
    container_name: mysql-ztbd
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: passwd
      MYSQL_USER: testing
      MYSQL_PASSWORD: extensive_testing
      MYSQL_DATABASE: ztbd
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql/db.sql:/docker-entrypoint-initdb.d/db.sql
  mongo7:
    container_name: mongo7-ztbd
    image: mongo:7
    restart: always
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_DATABASE: ztbd
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: passwd
    volumes:
      - ./mongodb/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
  mongo8:
    container_name: mongo8-ztbd
    image: mongo:8
    restart: always
    ports:
      - '27018:27017'
    environment:
      MONGO_INITDB_DATABASE: ztbd
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: passwd
    volumes:
      - ./mongodb/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
    depends_on:
      initializer:
        condition: service_completed_successfully

volumes:
  postgres-data:
  mysql-data:
  mongo7-data:
  mongo8-data:
